{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Shaamer's Reaction Timer\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Press play, then click the green button ASAP!\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Block = _resolveComponent(\"Block\");\n\n  const _component_Results = _resolveComponent(\"Results\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.start && $options.start(...args)),\n    disabled: $data.isPlaying\n  }, \" PLAY\", 8\n  /* PROPS */\n  , _hoisted_3), $data.isPlaying ? (_openBlock(), _createBlock(_component_Block, {\n    key: 0,\n    delay: $data.delay,\n    onEnd: $options.endGame\n  }, null, 8\n  /* PROPS */\n  , [\"delay\", \"onEnd\"])) : _createCommentVNode(\"v-if\", true), $data.showResult ? (_openBlock(), _createBlock(_component_Results, {\n    key: 1,\n    score: $data.score\n  }, null, 8\n  /* PROPS */\n  , [\"score\"])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAAkC,IAAlC,EAAkC,IAAlC,EAAI,2BAAJ,EAA6B;AAAA;AAA7B;;gCACAA,oBAAqD,GAArD,EAAqD,IAArD,EAAG,gDAAH,EAAiD;AAAA;AAAjD;;;;;;;;6DADAC,YACAC,YACAF,oBAA2D,QAA3D,EAA2D;IAAlDG,OAAK,yCAAEC,yCAAF,CAA6C;IAAnCC,QAAQ,EAAEC;EAAyB,CAA3D,EAA6C,OAA7C,EAAkD;EAAA;EAAlD,EAAkDC,UAAlD,GACaD,iCAAbE,aAAuDC,gBAAvD,EAAuD;UAAA;IAA9BC,KAAK,EAAEJ,WAAuB;IAAfK,KAAG,EAAEP;EAAU,CAAvD;;EAAA,4DACeE,kCAAfE,aAA2CI,kBAA3C,EAA2C;UAAA;IAAfC,KAAK,EAAEP;EAAQ,CAA3C;;EAAA","names":["_createElementVNode","_hoisted_1","_hoisted_2","onClick","$options","disabled","$data","_hoisted_3","_createBlock","_component_Block","delay","onEnd","_component_Results","score"],"sourceRoot":"","sources":["/Users/shaamerk/Desktop/pract/reaction-timerproj/src/App.vue"],"sourcesContent":["<template>\n  <h1> Shaamer's Reaction Timer</h1>\n  <p> Press play, then click the green button ASAP!</p>\n  <button @click=\"start\" :disabled=\"isPlaying\"> PLAY</button>\n  <Block v-if=\"isPlaying\" :delay=\"delay\" @end=\"endGame\"/>\n  <Results v-if=\"showResult\" :score=\"score\"/>\n </template>\n\n<script>\nimport Block from './components/Block.vue'\nimport Results from './components/Results.vue'\nexport default {\n  name: 'App',\n  components: {Block, Results},\n  data(){\n    return{\n      isPlaying: false,\n      delay: null,\n      score: null,\n      showResult:false\n    \n\n    }\n  },\n  methods: {\n    start() {\n      this.isPlaying = true\n      this.delay = 2000 + Math.random() * 3000\n      this.showResult = false\n\n    },\n    endGame(rctntm){\n      this.score = rctntm\n      this.isPlaying = false\n      this.showResult = true\n\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #444;\n  margin-top: 60px;\n  \n}\nbody{\n  background:lightgray;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}